rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOrgMember(orgId) {
      return isAuthenticated() && (
        exists(/databases/$(database)/documents/organizations/$(orgId)/coaches/$(request.auth.uid))
      );
    }

    function isOrgOwner(orgId) {
      return isAuthenticated() && (
        get(/databases/$(database)/documents/organizations/$(orgId)).data.ownerId == request.auth.uid
      );
    }

    function hasOrgPermission(orgId, permission) {
      return isAuthenticated() && (
        isOrgOwner(orgId) ||
        get(/databases/$(database)/documents/organizations/$(orgId)/coaches/$(request.auth.uid)).data.permissions[permission] == true
      );
    }

    // Organization rules
    match /organizations/{orgId} {
      allow read: if isOrgMember(orgId);
      allow create: if isAuthenticated();
      allow update: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'manageSettings');
      allow delete: if isOrgOwner(orgId);

      // Coaches subcollection
      match /coaches/{coachId} {
        allow read: if isOrgMember(orgId);
        allow create: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'manageCoaches');
        allow update: if isOrgOwner(orgId) || (
          hasOrgPermission(orgId, 'manageCoaches') &&
          coachId != request.auth.uid // Can't modify own permissions
        );
        allow delete: if isOrgOwner(orgId) && coachId != request.auth.uid; // Can't delete self
      }

      // Clients subcollection
      match /clients/{clientId} {
        allow read: if isOrgMember(orgId);
        allow create: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'manageClients');
        allow update: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'manageClients');
        allow delete: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'manageClients');
      }

      // Check-in forms subcollection
      match /checkInForms/{formId} {
        allow read: if isOrgMember(orgId);
        allow write: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'manageClients');
      }

      // Form submissions subcollection
      match /formSubmissions/{submissionId} {
        allow read: if isOrgMember(orgId);
        allow create: if isOrgMember(orgId);
        allow update, delete: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'manageClients');
      }

      // Billing & Payments subcollections
      match /subscriptions/{subscriptionId} {
        allow read: if isOrgMember(orgId);
        allow write: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'manageBilling');
      }

      match /payments/{paymentId} {
        allow read: if isOrgMember(orgId);
        allow write: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'manageBilling');
      }

      match /invoices/{invoiceId} {
        allow read: if isOrgMember(orgId);
        allow write: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'manageBilling');
      }

      // Communication subcollections
      match /messages/{messageId} {
        allow read: if isOrgMember(orgId);
        allow create: if isOrgMember(orgId);
        allow update, delete: if isOrgMember(orgId) && (
          resource.data.senderId == request.auth.uid ||
          isOrgOwner(orgId) ||
          hasOrgPermission(orgId, 'manageCommunication')
        );
      }

      match /notifications/{notificationId} {
        allow read: if isOrgMember(orgId);
        allow create: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'manageCommunication');
        allow update, delete: if isOrgMember(orgId) && (
          resource.data.userId == request.auth.uid ||
          isOrgOwner(orgId) ||
          hasOrgPermission(orgId, 'manageCommunication')
        );
      }

      match /communicationSettings/{settingsId} {
        allow read: if isOrgMember(orgId);
        allow write: if isOrgMember(orgId) && (
          resource.data.userId == request.auth.uid ||
          isOrgOwner(orgId) ||
          hasOrgPermission(orgId, 'manageCommunication')
        );
      }

      // Business & Organization subcollections
      match /plans/{planId} {
        allow read: if isOrgMember(orgId);
        allow write: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'manageSettings');
      }

      match /certifications/{certificationId} {
        allow read: if isOrgMember(orgId);
        allow write: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'manageCoaches');
      }

      // Analytics & Reporting subcollections
      match /reports/{reportId} {
        allow read: if isOrgMember(orgId);
        allow write: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'viewAnalytics');
      }

      match /performanceMetrics/{metricId} {
        allow read: if isOrgMember(orgId);
        allow write: if isOrgOwner(orgId) || hasOrgPermission(orgId, 'viewAnalytics');
      }
    }

    // User profile rules
    match /users/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Global collections (not organization-specific)
    match /companies/{companyId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /auditLogs/{logId} {
      allow read: if isAdmin() || resource.data.organizationId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizations;
      allow create: if isAuthenticated();
      allow update, delete: if false; // Audit logs should never be modified or deleted
    }

    match /securitySettings/{settingId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
  }
} 